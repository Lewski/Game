package Engine.Core.UI;

import java.awt.image.BufferedImage;
import java.io.IOException;

import javax.imageio.ImageIO;

import Engine.Core.graphics.SpriteSheet;

public class uiSprite {

	public final int SIZE;
	private int x,y;
	public int[] pixels;
	private uiSpriteSheet sheet;
	
	public static uiSprite panel = new uiSprite(8, 0, 0, uiSpriteSheet.gui);
	
	{
		uiSprite a_cap = new uiSprite(8, 0, 0, uiSpriteSheet.font);
		public static uiSprite b_cap = new uiSprite(8, 0, 0, uiSpriteSheet.font);
	}
	
	
	public uiSprite(int size, int x, int y, uiSpriteSheet sheet){
		SIZE = size;
		pixels = new int[SIZE * SIZE];
		this.x = x * size;
		this.y = y * size;
		this.sheet = sheet;
		
		load();
	}
	
	public uiSprite(int size, int color){
		SIZE = size;
		pixels = new int[SIZE * SIZE];
		setColor(color);
	}
	
	public uiSprite(String filePath){
		
		int size = 0;
		
		try {
			BufferedImage image = ImageIO.read(uiSpriteSheet.class.getResource(filePath));
			
			int w = image.getWidth();
			int h = image.getHeight();
			
			size = w;
			
			pixels = new int[size * size];
			
			image.getRGB(0, 0, w, h, pixels, 0, w);
			
			
		} catch (IOException e) {
			e.printStackTrace();
			size = 0;
		}
		
		SIZE = size;
		
		
	}
	
	private void setColor(int color){
		for(int i = 0; i < SIZE * SIZE; i++){
			pixels[i] = color;
		}
	}
	
	private void load(){
		for(int y = 0; y < SIZE; y ++){
			for(int x = 0; x < SIZE; x++){
				pixels[x + y * SIZE] = sheet.pixels[(x + this.x) + (y + this.y) * sheet.SIZE];
			}
		}
	}
	
}
